# This workflow will run tests using node and then publish a package to GitHub Container Registry and Docker Hub Regitry when a pushed into main branches
# This file was contributed by EdwinBetanc0urt@outlook.com from ERP Consultores y Asociados, C.A

name: Push Main Branches

on:
  # Triggers the workflow on push events but only for the develop branch
  push:
    branches:
      - main
      - master
      - develop
      - test**
    paths-ignore:
      - 'docs/**'
      - .github/workflows/docs.yml

jobs:

  # Build dist application ADempiere-Vue
  build-app:
    name: Build dist adempiere-vue
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Enable https to install packages
        run: git config --global url."https://".insteadOf git://

      - name: Install packages lerna
        run: yarn global add lerna

      - name: Update sub module
        run: git submodule update --init --remote

      - name: Install packages
        run: yarn ci

      - name: Compile dist
        run: yarn build:prod

      - name: Upload dist app
        uses: actions/upload-artifact@v3
        with:
          name: adempiere-vue
          path: dist

  # Publish docker image in Docker Hub registry to application
  push-imame-dhr:
    name: Push Docker image to Docker Hub
    needs:
      - build-app
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: adempiere-vue
          path: dist

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Lower Case to owner and repository
        run: |
          ORG=$OWNER
          if [ -n "${{ secrets.DOCKERHUB_ORG }}" ]; then
            echo "Set secret DOCKERHUB_ORG as namespace"
            ORG=${{ secrets.DOCKERHUB_ORG }}
          else
            echo "Set OWNER ($OWNER) as namespace "
          fi
          echo "ORG_LC=${ORG,,}" >> ${GITHUB_ENV}
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
          echo "REPO_LC=${NAME,,}" >> ${GITHUB_ENV}
        env:
          # to docker image namespace
          OWNER: '${{ github.repository_owner }}'
          NAME: '${{ github.event.repository.name }}'

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./build/Dockerfile.prod
          push: true
          tags: |
            ${{ env.ORG_LC }}/${{ env.REPO_LC }}:${{ steps.branch-name.outputs.current_branch }}
            ${{ env.ORG_LC }}/${{ env.REPO_LC }}:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
